@model ProjetoFinal_InforQui.Models.Produtos

@{
    ViewBag.Title = "Atualizar";
}

<h2>Atualizar os produtos</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Produtos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProdutoID)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ 
                    <script>
                        //a função que vai mudar a imagem
                        function mudarImagem(input) {
                            //se o parametro inut é o tipo 'file' e contenha o valor zero
                            if (input.files && input.files[0]) {
                                //referençia uma variavel para o FileReader
                                var reader = new FileReader();

                                reader.onload = function (e) {
                                    $('#imagem')
                                        .attr('src', e.target.result)
                                        .width(200)
                                        .height(200);
                                };

                                reader.readAsDataURL(input.files[0]);
                            }
                        }
                    </script>
                }
                <img id="imagem" src="~/Content/Imagens/@Html.DisplayFor(model=>model.Imagem)" style="width:200px;height:200px" />
                <input type='file' onchange="mudarImagem(this);" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tipo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @{ 
        <script>
            var formSubmitting = false;
            var setFormSubmitting = function () { formSubmitting = true; };

            window.onload = function () {
                window.addEventListener("beforeunload", function (e) {
                    return Error('Não pode');
                });
            };
        </script>
    }


    <form method="post" onsubmit="setFormSubmitting()">
        @Html.ActionLink("Volta para a lista dos Produtos", "Index")
     </form>
</div>
